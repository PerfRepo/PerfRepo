<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.perfrepo</groupId>
      <artifactId>perfrepo-parent</artifactId>
      <version>2.0-SNAPSHOT</version>
   </parent>

   <artifactId>perfrepo-web</artifactId>
   <packaging>war</packaging>
   <name>Performance Results Repository - Web</name>
   <description />

   <properties>
      <application.url>http://www.example.com</application.url>
   </properties>

   <dependencies>
      <dependency>
         <groupId>org.perfrepo</groupId>
         <artifactId>perfrepo-model</artifactId>
         <version>${project.parent.version}</version>
      </dependency>

      <dependency>
         <groupId>commons-lang</groupId>
         <artifactId>commons-lang</artifactId>
         <version>${commons.lang.version}</version>
      </dependency>

      <dependency>
         <groupId>javax.enterprise</groupId>
         <artifactId>cdi-api</artifactId>
         <scope>provided</scope>
      </dependency>

      <dependency>
         <groupId>org.jboss.spec.javax.annotation</groupId>
         <artifactId>jboss-annotations-api_1.2_spec</artifactId>
         <scope>provided</scope>
      </dependency>

      <dependency>
         <groupId>org.jboss.spec.javax.ws.rs</groupId>
         <artifactId>jboss-jaxrs-api_2.0_spec</artifactId>
         <scope>provided</scope>
      </dependency>

      <dependency>
         <groupId>org.hibernate.javax.persistence</groupId>
         <artifactId>hibernate-jpa-2.1-api</artifactId>
         <scope>provided</scope>
      </dependency>

      <dependency>
         <groupId>org.hibernate</groupId>
         <artifactId>hibernate-core</artifactId>
         <scope>provided</scope>
      </dependency>

      <dependency>
         <groupId>org.jboss.spec.javax.ejb</groupId>
         <artifactId>jboss-ejb-api_3.2_spec</artifactId>
         <scope>provided</scope>
      </dependency>

      <dependency>
         <groupId>org.hibernate</groupId>
         <artifactId>hibernate-validator</artifactId>
         <scope>provided</scope>
         <exclusions>
            <exclusion>
               <groupId>org.slf4j</groupId>
               <artifactId>slf4j-api</artifactId>
            </exclusion>
         </exclusions>
      </dependency>

      <dependency>
         <groupId>org.jboss.spec.javax.interceptor</groupId>
         <artifactId>jboss-interceptors-api_1.2_spec</artifactId>
         <scope>provided</scope>
      </dependency>

      <dependency>
         <groupId>org.jboss.spec.javax.servlet</groupId>
         <artifactId>jboss-servlet-api_3.1_spec</artifactId>
         <scope>provided</scope>
      </dependency>

      <dependency>
         <groupId>javax.mail</groupId>
         <artifactId>mail</artifactId>
         <version>${javax.mail.version}</version>
         <scope>provided</scope>
      </dependency>

      <dependency>
         <groupId>org.hibernate</groupId>
         <artifactId>hibernate-jpamodelgen</artifactId>
         <scope>provided</scope>
      </dependency>

      <dependency>
         <groupId>org.hibernate</groupId>
         <artifactId>hibernate-validator-annotation-processor</artifactId>
         <scope>provided</scope>
      </dependency>

      <dependency>
         <groupId>commons-io</groupId>
         <artifactId>commons-io</artifactId>
         <version>${commons.io.version}</version>
      </dependency>

      <dependency>
         <groupId>commons-collections</groupId>
         <artifactId>commons-collections</artifactId>
         <version>${commons.collections.version}</version>
      </dependency>

      <dependency>
         <groupId>commons-beanutils</groupId>
         <artifactId>commons-beanutils</artifactId>
         <version>${commons.beanutils.version}</version>
      </dependency>

      <dependency>
         <groupId>commons-codec</groupId>
         <artifactId>commons-codec</artifactId>
         <version>${commons.codec.version}</version>
      </dependency>

      <dependency>
         <groupId>log4j</groupId>
         <artifactId>log4j</artifactId>
      </dependency>

      <dependency>
         <groupId>org.jboss.resteasy</groupId>
         <artifactId>resteasy-jaxrs</artifactId>
         <scope>provided</scope>
      </dependency>

      <dependency>
         <groupId>org.jboss.resteasy</groupId>
         <artifactId>resteasy-multipart-provider</artifactId>
         <scope>provided</scope>
      </dependency>

      <dependency>
         <groupId>org.jboss.resteasy</groupId>
         <artifactId>resteasy-jaxb-provider</artifactId>
         <scope>provided</scope>
      </dependency>

      <dependency>
         <groupId>org.jboss.resteasy</groupId>
         <artifactId>resteasy-validator-provider-11</artifactId>
         <scope>provided</scope>
      </dependency>

      <dependency>
         <groupId>org.jboss.arquillian.junit</groupId>
         <artifactId>arquillian-junit-container</artifactId>
         <scope>test</scope>
      </dependency>

      <dependency>
         <groupId>junit</groupId>
         <artifactId>junit</artifactId>
         <scope>test</scope>
      </dependency>

      <dependency>
         <groupId>org.wildfly.arquillian</groupId>
         <artifactId>wildfly-arquillian-container-remote</artifactId>
         <scope>test</scope>
      </dependency>

      <dependency>
         <groupId>org.jboss.spec.javax.el</groupId>
         <artifactId>jboss-el-api_3.0_spec</artifactId>
         <scope>provided</scope>
      </dependency>

      <dependency>
         <groupId>org.tuckey</groupId>
         <artifactId>urlrewritefilter</artifactId>
         <version>${urlrewritefilter.version}</version>
      </dependency>

      <dependency>
         <groupId>jfree</groupId>
         <artifactId>jfreechart</artifactId>
         <version>${jfreechart.version}</version>
      </dependency>

      <dependency>
         <groupId>com.google.guava</groupId>
         <artifactId>guava</artifactId>
         <version>${guava.version}</version>
      </dependency>

      <dependency>
         <groupId>org.antlr</groupId>
         <artifactId>antlr</artifactId>
         <version>${antlr.version}</version>
         <type>jar</type>
         <scope>compile</scope>
      </dependency>

      <dependency>
         <groupId>org.mockito</groupId>
         <artifactId>mockito-core</artifactId>
         <version>1.9.5</version>
         <scope>test</scope>
      </dependency>

      <dependency>
         <groupId>org.apache.maven</groupId>
         <artifactId>maven-artifact</artifactId>
         <version>3.0.3</version>
      </dependency>

      <dependency>
         <groupId>org.jboss.shrinkwrap.resolver</groupId>
         <artifactId>shrinkwrap-resolver-depchain</artifactId>
         <version>2.1.1</version>
         <scope>test</scope>
         <type>pom</type>
      </dependency>

      <dependency>
         <groupId>org.codehaus.plexus</groupId>
         <artifactId>plexus-utils</artifactId>
         <version>3.0.24</version>
         <scope>test</scope>
      </dependency>

      <dependency>
         <groupId>org.jboss.resteasy</groupId>
         <artifactId>resteasy-jackson2-provider</artifactId>
         <version>3.1.0.Final</version>
         <scope>provided</scope>
      </dependency>
   </dependencies>


   <build>
      <finalName>${project.artifactId}</finalName>
      <plugins>
         <plugin>
            <artifactId>maven-war-plugin</artifactId>
            <version>${maven.war.plugin.version}</version>
            <configuration>
               <failOnMissingWebXml>false</failOnMissingWebXml>
               <archive>
                  <manifestEntries>
                     <Dependencies>org.jboss.resteasy.resteasy-jaxb-provider export services</Dependencies>
                     <Implementation-Version>${project.version}</Implementation-Version>
                  </manifestEntries>
               </archive>
               <webResources>
                  <resource>
                     <directory>src/main/webapp/</directory>
                     <filtering>true</filtering>
                     <includes>
                        <include>WEB-INF/web.xml</include>
                        <include>WEB-INF/jboss-web.xml</include>
                     </includes>
                  </resource>
               </webResources>
            </configuration>
         </plugin>

         <plugin>
            <groupId>org.wildfly.plugins</groupId>
            <artifactId>wildfly-maven-plugin</artifactId>
            <version>${maven.wildfly.plugin.version}</version>
         </plugin>

         <!-- plugins for ANTLR -->
         <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <version>${maven.helper.plugin.version}</version>
            <executions>
               <execution>
                  <id>add-source</id>
                  <phase>generate-sources</phase>
                  <goals>
                     <goal>add-source</goal>
                  </goals>
                  <configuration>
                     <sources>
                        <source>${basedir}/target/generated-sources/antlr3</source>
                     </sources>
                  </configuration>
               </execution>
            </executions>
         </plugin>

         <plugin>
            <groupId>org.antlr</groupId>
            <artifactId>antlr3-maven-plugin</artifactId>
            <version>${antlr.version}</version>
            <executions>
               <execution>
                  <id>run antlr</id>
                  <phase>generate-sources</phase>
                  <goals>
                     <goal>antlr</goal>
                  </goals>
               </execution>
            </executions>
         </plugin>

         <plugin>
            <groupId>com.github.eirslett</groupId>
            <artifactId>frontend-maven-plugin</artifactId>
            <version>1.4</version>
            <executions>
               <execution>
                  <id>install node and npm</id>
                  <goals>
                     <goal>install-node-and-npm</goal>
                  </goals>
                  <phase>generate-resources</phase>
                  <configuration>
                     <nodeVersion>v6.10.2</nodeVersion>
                     <npmVersion>3.10.10</npmVersion>
                  </configuration>
               </execution>
               <execution>
                  <id>npm install</id>
                  <goals>
                     <goal>npm</goal>
                  </goals>
                  <phase>generate-resources</phase>
               </execution>
               <execution>
                  <id>bower install</id>
                  <goals>
                     <goal>bower</goal>
                  </goals>
                  <configuration>
                     <arguments>install</arguments>
                  </configuration>
               </execution>
               <execution>
                  <id>gulp build</id>
                  <goals>
                     <goal>gulp</goal>
                  </goals>
                  <phase>generate-resources</phase>
               </execution>
            </executions>
         </plugin>

   </plugins>

      <resources>
         <resource>
            <directory>src/main/resources/</directory>
            <filtering>true</filtering>
         </resource>
      </resources>
   </build>

   <profiles>
      <profile>
         <!-- The default profile skips all tests, though you can tune it to run just unit tests based on a custom pattern -->
         <!-- Seperate profiles are provided for running all tests, including Arquillian tests that execute in the specified container -->
         <id>default</id>
         <activation>
            <activeByDefault>true</activeByDefault>
         </activation>
         <build>
            <plugins>
               <plugin>
                  <artifactId>maven-surefire-plugin</artifactId>
                  <version>${maven.surefire.plugin.version}</version>
                  <configuration>
                     <skip>false</skip>
                  </configuration>
               </plugin>
            </plugins>
         </build>
      </profile>

      <profile>
         <!-- When built in OpenShift the 'openshift' profile will be used when invoking mvn. -->
         <!-- Use this profile for any OpenShift specific customization your app will need. -->
         <!-- By default that is to put the resulting archive into the 'deployments' folder. -->
         <!-- http://maven.apache.org/guides/mini/guide-building-for-different-environments.html -->
         <id>openshift</id>
         <build>
            <plugins>
               <plugin>
                  <artifactId>maven-war-plugin</artifactId>
                  <version>${maven.war.plugin.version}</version>
                  <configuration>
                     <outputDirectory>deployments</outputDirectory>
                     <warName>repo</warName>
                  </configuration>
               </plugin>
            </plugins>
         </build>
      </profile>

      <profile>
         <id>jacoco</id>
         <dependencies>
            <dependency>
               <groupId>org.jboss.arquillian.extension</groupId>
               <artifactId>arquillian-jacoco</artifactId>
               <version>1.0.0.Alpha8</version>
               <scope>test</scope>
            </dependency>

            <dependency>
               <groupId>org.jacoco</groupId>
               <artifactId>org.jacoco.core</artifactId>
               <version>0.7.5.201505241946</version>
               <scope>test</scope>
            </dependency>
         </dependencies>

         <build>
            <plugins>
               <plugin>
                  <groupId>org.jacoco</groupId>
                  <artifactId>jacoco-maven-plugin</artifactId>
                  <version>0.7.5.201505241946</version>
                  <executions>
                     <execution>
                        <id>default-prepare-agent</id>
                        <goals>
                           <goal>prepare-agent</goal>
                        </goals>
                     </execution>
                     <execution>
                        <id>default-prepare-agent-integration</id>
                        <goals>
                           <goal>prepare-agent-integration</goal>
                        </goals>
                        <configuration>
                           <destFile>${project.build.directory}/jacoco-it.exec</destFile>
                        </configuration>
                     </execution>
                     <execution>
                        <id>Create Unit Test Report</id>
                        <phase>prepare-package</phase>
                        <goals>
                           <goal>report</goal>
                        </goals>
                     </execution>
                     <execution>
                        <id>Create Integration Test Report</id>
                        <goals>
                           <goal>report-integration</goal>
                        </goals>
                     </execution>
                  </executions>
               </plugin>
            </plugins>
         </build>
      </profile>

   </profiles>
</project>
